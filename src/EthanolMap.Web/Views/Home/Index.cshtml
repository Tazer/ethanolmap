@{
    ViewBag.Title = "Home Page";
}
<h1>Ethanol Map5</h1>
<div data-role="collapsible" id="instructions-container">
    <h3>Instructions</h3>
    <p><div id="instructions-content"></div></p>
</div>
<div data-bind="with: newStation">
    Create a new one.<br />
    Name: <input type="text" name="Name" data-bind="value:name" />
    Address:<input type="text" name="Address" data-bind="value:address" />
    Latitude:<input type="text" name="Latitude" data-bind="value:latitude" />
    Longitude:<input type="text" name="Longitude" data-bind="value:longitude" />
    PhoneNumber:<input type="text" name="PhoneNumber" data-bind="value:phoneNumber" />
    <button class="btn" data-bind="click:save">Create</button>


</div>
<div id="ethanolMap"></div>


@section scripts
{
    <script type="text/javascript">
        var ajaxApi = function (url, type, data) {
            return $.ajax({
                url: url,
                type: type,
                dataType: 'json',
                data: data != null ? data : "",
                contentType: 'application/json; charset=utf-8'
            });
        };

        var Station = function () {
            var self = this;
            self.name = ko.observable();
            self.address = ko.observable();
            self.latitude = ko.observable();
            self.longitude = ko.observable();
            self.phoneNumber = ko.observable();
            self.save = function () {
                ajaxApi('/Station/Save',"POST", ko.toJSON(self)).done(function () { console.log("Saved") });
            }
        }
        var EthanolMap = function (options) {
            var self = this;
            var map;
            var browserSupportFlag = new Boolean();
            var initialLocation;
            var targetDestination;
            var directionsDisplay = new google.maps.DirectionsRenderer();
            var directionsService = new google.maps.DirectionsService();
            var userMarker = null;

            var ethanolStationsMarkers = [];
            self.newStation = ko.observable(new Station());
            self.initMap = function () {
                var directionsDisplay = new google.maps.DirectionsRenderer();
                var mapOptions = {
                    center: new google.maps.LatLng(-34.397, 150.644),
                    zoom: 8,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };
                map = new google.maps.Map(options.map, mapOptions);

                google.maps.event.addListener(map, 'click', function (event) {
                    console.log(event);
                    console.log(event.latLng);
                    var latitude = event.latLng.ob;
                    var longitude = event.latLng.pb;
                    self.newStation().latitude(latitude);
                    self.newStation().longitude(longitude);
                });
                targetDestination = new google.maps.LatLng(57.15990, 12.31277);
                directionsDisplay.setMap(map);
                // Try W3C Geolocation (Preferred)
                if (navigator.geolocation) {
                    browserSupportFlag = true;
                    navigator.geolocation.getCurrentPosition(function (position) {
                        initialLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                        map.setCenter(initialLocation);
                    }, function () {
                        handleNoGeolocation(browserSupportFlag);
                    });
                }
                    // Browser doesn't support Geolocation
                else {
                    browserSupportFlag = false;
                    handleNoGeolocation(browserSupportFlag);
                }
                ajaxApi('/Station/GetAll', 'POST', null).done(function (data) {
                    console.log(data);
                    $.each(data, function () {
                        AddMarkersFromDatabase(this.Latitude, this.Longitude);
                    });

                    
                })

                UpdateRealtimeUserPosition();
            };

            function AddMarkersFromDatabase(latitude, longitude) {
                console.log(latitude);
                var newMarker = new google.maps.Marker({
                    position: new google.maps.LatLng(latitude, longitude),
                    map: map,
                    animation: google.maps.Animation.DROP
                });

                google.maps.event.addListener(newMarker, 'click', function () {
                    targetDestination = newMarker;
                    if (userMarker && userMarker != '' && targetDestination && targetDestination != '') {
                        console.log("INSIDE");
                        var request = {
                            origin: userMarker.position,
                            destination: targetDestination.position,
                            travelMode: google.maps.DirectionsTravelMode["DRIVING"]
                        };

                        directionsService.route(request, function (response, status) {
                            console.log(response);
                            console.log(status);
                            if (status == google.maps.DirectionsStatus.OK) {
                                directionsDisplay.setPanel(document.getElementById("instructions-content"));
                                directionsDisplay.setDirections(response);

                                // For debuging reasons uncomment
                                /*
                                var myRoute = response.routes[0].legs[0];
                                for (var i = 0; i < myRoute.steps.length; i++) {
                                  alert(myRoute.steps[i].instructions);
                                }*/
                            }
                        });
                    }
                });

                ethanolStationsMarkers.push(newMarker);
            }

            function UpdateRealtimeUserPosition() {
                var options = {
                    maximumAge: 1000,
                    timeout: 5000,
                    enableHighAccuracy: true
                };
                var myUpdatedPos = navigator.geolocation.watchPosition(onSuccess, onError, options);

                function onSuccess(position) {

                    if (userMarker == null) {
                        userMarker = new google.maps.Marker({
                            position: new google.maps.LatLng(position.coords.latitude, position.coords.longitude),
                            map: map,
                            animation: google.maps.Animation.DROP
                        });
                    }

                    //here I update the position
                    var newLatlng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                    userMarker.setPosition(newLatlng);
                    map.setCenter(newLatlng);
                    directionsDisplay.setMap(map);

                }

                // onError Callback receives a PositionError object
                //

                function onError(error) {
                    alert('code: ' + error.code + '\n' +
                        'message: ' + error.message + '\n');
                }
            }


            function handleNoGeolocation(errorFlag) {
                if (errorFlag == true) {
                    alert("Geolocation service failed.");

                } else {
                    alert("Your browser doesn't support geolocation. We've placed you in Siberia.");
                }
                map.setCenter(initialLocation);
            }
        };

        $(document).ready(function () {
            var viewModel = new EthanolMap({ map: document.getElementById("ethanolMap") });
            ko.applyBindings(viewModel);
            viewModel.initMap();
        });

    </script>
}
